openapi: 3.0.3
info:
  title: Skill matrix
  description: Server storing information about Employees.
  version: 1.0.11
servers:
  - url: localhost:8080/api
tags:
  - name: employee
    description: Everything about Employees
  - name: project
    description: Access to projects
  - name: skill
    description: Access to skills
paths:
  /employee:
    post:
      tags:
        - employee
      summary: Add a new employee
      description: Add a new employee
      operationId: addEmployee
      requestBody:
        description: Create a new employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '405':
          description: Invalid input
        '409':
          description: Employee already exists
    get:
      tags:
        - employee
      summary: Get all employees
      description: Get all employees
      operationId: getEmployees
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid status value
  /employee/{employeeId}:
    get:
      tags:
        - employee
      summary: Find employee by ID
      description: Returns a single employee with specific ID
      operationId: getEmployeeById
      parameters:
        - name: employeeId
          in: path
          description: ID of employee to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
    put:
      tags:
        - employee
      summary: Updates an employee by ID
      description: Updates an employee with specific ID
      operationId: updateEmployee
      parameters:
        - name: employeeId
          in: path
          description: ID of employee that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Modify an employee
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '204':
          description: Successfully modified
        '404':
          description: Employee not found
        '405':
          description: Invalid input
        '409':
          description: IDs don't match
    delete:
      tags:
        - employee
      summary: Deletes an employee by ID
      description: Deletes an employee with specific ID
      operationId: deleteEmployee
      parameters:
        - name: employeeId
          in: path
          description: Employee id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
        '404':
          description: Employee not found
  /employee/search/{term}:
    get:
      tags:
        - employee
      summary: Find matching employees
      description: Returns employees matching name and surname
      operationId: searchEmployees
      parameters:
        - name: term
          in: path
          description: Term containing part of name or surname
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
  /project:
    get:
      tags:
        - project
      summary: Get all projects
      description: Get all projects
      operationId: getProjects
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid status value
  /project/search/{term}:
    get:
      tags:
        - project
      summary: Find matching projects
      description: Returns matching projects
      operationId: searchProjects
      parameters:
        - name: term
          in: path
          description: Term containing part of project name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
  /skill:
    get:
      tags:
        - skill
      summary: Get all skills
      description: Get all skills
      operationId: getSkills
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '400':
          description: Invalid status value
  /skill/search/{term}:
    get:
      tags:
        - skill
      summary: Find matching skills
      description: Returns matching skills
      operationId: searchSkills
      parameters:
        - name: term
          in: path
          description: Term containing part of skill name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
        '404':
          description: Skill not found
components:
  schemas:
    Employee:
      required:
        - name
        - surname
        - employmentDate
        - listOfSkills
        - listOfProjects
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
          example: Jan
        surname:
          type: string
          example: Kowalski
        employmentDate:
          type: string
          format: date
          example: 2023-7-17
        listOfProjects:
          $ref: '#/components/schemas/Project'
        listOfSkills:
          $ref: '#/components/schemas/Skill'
        managerId:
          type: string
          example: 1
    Project:
      type: array
      items:
        type: string
      example:
        - DataTrackr
        - eHealthPlus
    Skill:
      type: array
      items:
        type: string
      example:
        - Angular
        - HTML
        - CSS
        - TypeScript
  requestBodies:
    Employee:
      description: Employee object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
